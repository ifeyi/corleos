<?php

/**
 * Moderateurs
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    epharma
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Moderateurs
{
	/**
	 * Méthode permettant d'ajouter un moderateur
	 * @param $moderateur Moderateur le moderateur à ajouter
	 * @return void
	 */
	abstract protected function add(Moderateur $moderateur);
	
	
	/**
	 * Méthode renvoyant le nombre de moderateur total
	 * @return int
	 */
	abstract public function count();
	
	/**
	 * Méthode permettant de supprimer une moderateur
	 * @param $id int L'identifiant du moderateur à supprimer
	 * @return void
	 */
	abstract public function delete($id);
	
	
	/**
	 * Méthode retournant une liste de moderateur demandée
	 * @param $debut int Le premier moderateur à sélectionner
	 * @param $limite int Le nombre de moderateur à sélectionner
	 * @return array La liste des moderateur. Chaque entrée est une instance
		de Moderateur.
	 */
	abstract public function getList($debut = -1, $limite = -1);
	
	
	
	/**
	 * Méthode retournant un moderateur précis
	 * @param $id int L'identifient du moderateur à récupérer
	 * @return Moderateur Le moderateur demandée
	 */
	abstract public function getUnique($id);
	
	/**
	 * Méthode permettant d'enregistrer un moderateur
	 * @param $moderateur Moderateur le moderateur à enregistrer
	 * @see self::add()
	 * * @see self::modify()
	 * @return void
	 */
	public function save(Moderateur $moderateur)
	{
		if ($moderateur->isValid())
		{
			$moderateur->isNew() ? $this->add($moderateur) : $this->update($moderateur);
		}
		else
		{
			throw new RuntimeException('La moderateur doit être valide pour être enregistré');
		}
	}
	/**
	 * Méthode permettant de modifier un moderateur
	 * @param $moderateur moderateur le moderateur à modifier
	 * @return void
	 */
	abstract protected function update(Moderateur $moderateur);
	
	

}