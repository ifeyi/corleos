<?php

/**
 * Produits
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    epharma
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Produits
{
	protected $erreur=array(),
			  $_idproduits,
			  $_cip,
			  $_code,
			  $_nom,
			  $_categorie,
			  $_existence;
	
	
	const CIP_INVALIDE=1;
	const CODE_INVALIDE=2;
	const NOM_INVALIDE=3;
	const CATEGORIE_INVALIDE=4;
	const EXISTENCE_INVALIDE=5;
			

	public function __construct($valeur=array())
	{
		if(!empty($valeur))
		{
			$this->hydrate($valeur);
		}
	}
	
	public function hydrate($donnees)
	{
		foreach($donnees as $attribut => $valeur)
		{
			$methode= 'set'.ucfirst($attribut);
			if (is_callable(array($this, $methode)))
			{
				$this->$methode($valeur);
			}
		}
	}
	
	public function isNew()
	{
		return empty($this->_idproduits);
	}
	
	public function isValid()
	{
		return !(empty($this->_cip)||empty($this->_code)||empty($this->_nom)||empty($this->_categorie)||empty($this->_existence));
	}
	
	
	//LISTE DES SETTERS
	
	public function setIdproduits($idproduit)
	{
		$this->_idproduits=(int)htmlspecialchars($idproduit);
	}
	
	public function setCip($cip)
	{
		if(is_string($cip)&& strlen($cip)<=14)
		{
			$this->_cip=(int)htmlspecialchars($cip);
		}
		else
		{
			$this->erreur[]=self::CIP_INVALIDE;
		}
	}
	
	public function setCode($code)
	{
		if(is_string($code) && strlen($code)<=8)
		{
			$this->_code=(string)htmlspecialchars($code);
		}
		else
		{
			$this->erreur[]=self::CODE_INVALIDE;
		}
	}
	
	public function setNom($nom)
	{
		if(is_string($nom)&&strlen($nom)<=200)
		{
			$this->_nom=(string)htmlspecialchars($nom);
			
		}
		else
		{
			$this->erreur[]=self::NOM_INVALIDE;
		}
	}
	
	public function setCategorie($categorie)
	{
		if(is_string($categorie)&&strlen($categorie)<=30)
		{
			$this->_categorie=(string)htmlspecialchars($categorie);
		}
		else
		{
			$this->erreur[]=self::CATEGORIE_INVALIDE;
		}
	}
	
	public function setExistence($existence)
	{
		if(is_string($existence)&& strlen($existence)==1)
		{
			$this->_existence=(int)htmlspecialchars($existence);
		}
		else
		{
			$this->erreur[]=self::EXISTENCE_INVALIDE;
		}
	}
	
	//LISTE DES GETTERS 
	
	public function idproduits()
	{
		return $this->_idproduit;
	}
	
	public function cip()
	{
		return $this->_cip;
	}
	
	public function code()
	{
		return $this->_code;
	}
	
	public function nom()
	{
		return $this->_nom;
	}
	
	public function categorie()
	{
		return $this->_categorie;
	}
	
	public function existence()
	{
		return $this->_existence;
	}
	
	public function erreur()
	{
		return $this->_erreur;
	}
}